#pragma kernel CSMain
#include "Assets/CgIncludes/ColorCollect.cginc" 

RWTexture2D<float4> Output;
Texture2D<float4> Read;
int ScreenWidth;
int ScreenHeight;

int stepno;
int offset;
int stage;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float3 dst;

	//2d→1dに変換する
	int elem1d = id.y * ScreenWidth + id.x;

	//idをstageで割った余りを求める
	int csign = (fmod(elem1d, stage) < offset) ? 1 : -1;

	float cdir = (fmod(floor(elem1d/stepno),2)<=0.5) ? 1 : -1;

	float3 val0 = rgb2hsv(Read[id.xy]);

	int adr1d = csign * offset + elem1d;

	//1d → 2d
	uint2 adr2d = uint2(adr1d % ScreenWidth, adr1d / ScreenWidth);

	float3 val1 = rgb2hsv(Read[adr2d]);

	float3 cmin = (val0.x < val1.x) ? val0: val1;
	float3 cmax = (val0.x < val1.x) ? val1: val0;

	dst = (csign==cdir) ? hsv2rgb(cmin) : hsv2rgb(cmax);

	Output[id.xy] = float4(dst, 1);
}